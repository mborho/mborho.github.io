<?xml version="1.0" encoding="utf-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Stacktrace</title><link>http://io.drigger.com/</link><description>this site just renders by accident</description><atom:link href="http://io.drigger.com/rss.xml" type="application/rss+xml" rel="self"></atom:link><language>en</language><lastBuildDate>Sun, 16 Nov 2014 12:01:27 GMT</lastBuildDate><generator>nikola</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Ten Volt Shock</title><link>http://io.drigger.com/posts/201411151604-ten-volt-shock.html</link><description>&lt;img alt="/images/tvs.jpg" src="http://io.drigger.com/images/tvs.jpg"&gt;</description><author></author><guid>http://io.drigger.com/posts/201411151604-ten-volt-shock.html</guid><pubDate>Sat, 15 Nov 2014 16:04:03 GMT</pubDate></item><item><title>Hank Wood and the Hammerheads</title><link>http://io.drigger.com/posts/201411132349-hank-wood-and-the-hammerheads.html</link><description>&lt;img alt="/images/image20141113_230740576.jpg" src="http://io.drigger.com/images/image20141113_230740576.jpg"&gt;</description><author></author><guid>http://io.drigger.com/posts/201411132349-hank-wood-and-the-hammerheads.html</guid><pubDate>Thu, 13 Nov 2014 23:49:04 GMT</pubDate></item><item><title>Ed Schrader's Music Beat</title><link>http://io.drigger.com/posts/201411122244-ed-schraders-music-beat.html</link><description>&lt;img alt="/images/schrader.jpg" src="http://io.drigger.com/images/schrader.jpg"&gt;</description><author></author><guid>http://io.drigger.com/posts/201411122244-ed-schraders-music-beat.html</guid><pubDate>Wed, 12 Nov 2014 22:44:04 GMT</pubDate></item><item><title>Relax!</title><link>http://io.drigger.com/posts/201411062236-relax.html</link><description>&lt;img alt="/images/20141106_001.jpg" src="http://io.drigger.com/images/20141106_001.jpg"&gt;</description><author></author><guid>http://io.drigger.com/posts/201411062236-relax.html</guid><pubDate>Thu, 06 Nov 2014 22:36:04 GMT</pubDate></item><item><title>Neue Kamera, ohne Blitz</title><link>http://io.drigger.com/posts/201411051323-neue-kamera-ohne-blitz.html</link><description>&lt;img alt="/images/15096694473_e48485ec61_b.jpg" src="http://io.drigger.com/images/15096694473_e48485ec61_b.jpg"&gt;&lt;p&gt;&lt;a class="reference external" href="https://www.flickr.com/photos/51035725191@N01/sets/72157648734652410/"&gt;Flickr Album&lt;/a&gt;&lt;/p&gt;</description><author></author><guid>http://io.drigger.com/posts/201411051323-neue-kamera-ohne-blitz.html</guid><pubDate>Wed, 05 Nov 2014 13:23:03 GMT</pubDate></item><item><title>Vaz</title><link>http://io.drigger.com/posts/201410301134-vaz.html</link><description>&lt;img alt="/images/20141029_002.jpg" src="http://io.drigger.com/images/20141029_002.jpg"&gt;</description><author></author><guid>http://io.drigger.com/posts/201410301134-vaz.html</guid><pubDate>Thu, 30 Oct 2014 11:34:06 GMT</pubDate></item><item><title>Swans</title><link>http://io.drigger.com/posts/swans.html</link><description>&lt;img alt="/images/20141027_012.jpg" src="http://io.drigger.com/images/20141027_012.jpg"&gt;</description><author></author><guid>http://io.drigger.com/posts/swans.html</guid><pubDate>Tue, 28 Oct 2014 00:39:03 GMT</pubDate></item><item><title>Using thread-based SleekXMPP together with the asyncio event loop in Python 3</title><link>http://io.drigger.com/posts/201410252029-using-thread-based-sleekxmpp-together-with-the-asyncio-event-loop-in-python-3.html</link><description>&lt;p&gt;Some months ago I've started to migrate my &lt;a class="reference external" href="https://github.com/mborho/silozippr"&gt;push-based feed/twitter reader&lt;/a&gt; from Node.js to Python3. As I also wanted to have integration of &lt;a class="reference external" href="https://superfeedr.com"&gt;Superfeedr&lt;/a&gt; and their &lt;a class="reference external" href="http://documentation.superfeedr.com/subscribers.html#xmpp-pubsub"&gt;XMPP PubSub&lt;/a&gt; service, a XMPP module was needed which would play nicely with the new &lt;a class="reference external" href="https://docs.python.org/3/library/asyncio.html#module-asyncio"&gt;asyncio&lt;/a&gt; module of Python3.&lt;/p&gt;
&lt;p&gt;Problem:  &lt;a class="reference external" href="https://github.com/fritzy/SleekXMPP"&gt;SleekXMPP&lt;/a&gt; had support of all needed plugins, but is thread-based. Which isn't good, if you want to build your app in an asynchronous manner with the asyncio event loop.&lt;/p&gt;
&lt;p&gt;Fortunately asyncio gives the possibility to run threads in an &lt;a class="reference external" href="https://docs.python.org/3/library/asyncio-eventloop.html#executor"&gt;Executor&lt;/a&gt;, which I did.&lt;/p&gt;
&lt;p&gt;In hope, somebody might find this helpfull,  I've rewritten the EchoBot-Example of SleekXMPP, running now in an asyncio executor. As you can see (&lt;a class="reference external" href="https://gist.github.com/mborho/55be89eead0b0e19e051"&gt;gist here&lt;/a&gt;), the main thread with the event loop and the XMPP client, running in an executor, are communicating over a queue. So you can use your XMPP client not only for receiving messages, but also for sending. With the possibility to do work in the event loop!&lt;/p&gt;
&lt;script src="https://gist.github.com/55be89eead0b0e19e051.js"&gt;&lt;/script&gt;&lt;noscript&gt;&lt;pre class="literal-block"&gt;
#!/usr/bin/env python
import asyncio
import logging
from queue import Queue, Empty
from sleekxmpp import ClientXMPP
from sleekxmpp.xmlstream import scheduler
from sleekxmpp.exceptions import IqError, IqTimeout

# logging
logging.basicConfig(level=logging.INFO,
    format='%(asctime)s - %(threadName)s - %(name)s - %(levelname)s - %(message)s')

# your xmpp user
XMPP_JID = "your@jabberuser.com"
XMPP_PWD = "pwd"

# queue for xmpp client thread
xmpp_queue = Queue()

class EchoBot(ClientXMPP):

    def __init__(self, jid, password, loop, msg_callback, queue):
        ClientXMPP.__init__(self, jid, password)

        # asyncio loop and callback
        self.loop = loop
        self.msg_callback = msg_callback
        self.queue = queue

        self.add_event_handler("session_start", self.session_start)
        self.add_event_handler("message", self.message)

    def send_reply(self, msg):
        msg.send()

    def from_main_thread_nonblocking(self):
        try:
            msg = self.queue.get(False) #doesn't block
            logging.info("got msg from main: %s" % msg)
            # schedule the reply
            scheduler.Task("SEND REPLY", 0, self.send_reply, (msg,)).run()
        except Empty:
            pass

    def session_start(self, event):
        self.send_presence()
        # start a scheduler to check the queue
        self.scheduler.add("asyncio_queue", 2, self.from_main_thread_nonblocking,
            repeat=True, qpointer=self.event_queue)

    def message(self, msg):
        if msg['type'] in ('chat', 'normal'):
            # msg received, call the msg callback in the main thread with the event loop
            self.loop.call_soon_threadsafe(self.msg_callback, msg)

def start_sleekxmpp(xmpp_jid, xmpp_pwd, loop, msg_callback, xmpp_queue):
    xmpp = EchoBot(xmpp_jid, xmpp_pwd, loop, msg_callback, xmpp_queue)
    xmpp.connect()
    xmpp.process() # non-blocking!

@asyncio.coroutine
def do_something_async(msg):
    xmpp_queue.put(msg)
    return True

def xmpp_callback(msg):
    msg.reply("I SAW THE LOOP: %(body)s" % msg)
    asyncio.Task(do_something_async(msg))

if __name__ == '__main__':

    loop = asyncio.get_event_loop()

    # call the method to start the EchoBot, use xmpp_callback
    # and xmpp_queue to communicate
    loop.run_in_executor(None, start_sleekxmpp, XMPP_JID, XMPP_PWD,
                         loop, xmpp_callback, xmpp_queue)

    loop.run_forever()
    loop.close()


&lt;/pre&gt;
&lt;/noscript&gt;</description><author></author><category>coding</category><category>python</category><category>asyncio</category><category>xmpp</category><guid>http://io.drigger.com/posts/201410252029-using-thread-based-sleekxmpp-together-with-the-asyncio-event-loop-in-python-3.html</guid><pubDate>Sat, 25 Oct 2014 20:29:04 GMT</pubDate></item><item><title>Current State of the Art</title><link>http://io.drigger.com/posts/201410251607-current-state-of-the-art.html</link><description>&lt;img alt="/images/IMG_20141025_145025.jpg" src="http://io.drigger.com/images/IMG_20141025_145025.jpg"&gt;</description><author></author><guid>http://io.drigger.com/posts/201410251607-current-state-of-the-art.html</guid><pubDate>Sat, 25 Oct 2014 16:07:05 GMT</pubDate></item><item><title>Reeperbahn</title><link>http://io.drigger.com/posts/201410201314-reeperbahn.html</link><description>&lt;img alt="/images/20141019_002.jpg" src="http://io.drigger.com/images/20141019_002.jpg"&gt;</description><author></author><guid>http://io.drigger.com/posts/201410201314-reeperbahn.html</guid><pubDate>Mon, 20 Oct 2014 13:14:04 GMT</pubDate></item></channel></rss>